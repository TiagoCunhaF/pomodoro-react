{"version":3,"sources":["components/TypeSelect.js","helpers.js","components/TimeDisplay.js","components/Controls.js","components/Shortcuts.js","components/ToggleSound.js","components/Tasks/TaskToggle/index.js","components/Tasks/TaskList/context.js","components/Tasks/Task/index.js","components/Tasks/TaskList/index.js","containers/Pomodoro.js","index.js"],"names":["memo","_ref","types","changeType","selected","react_default","a","createElement","className","map","type","index","key","name","onClick","pad2","num","concat","formatTime","time","minutes","Math","floor","seconds","TimeDisplay","status","progress","document","title","circumference","normalizedRadius","PI","strokeDashoffset","width","viewBox","radius","stroke","fill","strokeWidth","r","cx","cy","strokeDasharray","style","start","reset","pause","sound","toggleSound","task","toggleTask","createContext","Task","ref","useRef","_useContext","useContext","TaskContext","move","handleStatus","_useDrag","useDrag","item","id","collect","monitor","isDragging","_useDrag2","Object","slicedToArray","dragRef","_useDrop","useDrop","accept","hover","dragged","target","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","order","dropRef","closed","selectedTaskType","_useState","useState","_useState2","input","setInput","taskStatus","value","_useState3","JSON","parse","window","localStorage","getItem","_useState4","tasks","setTasks","_useState5","_useState6","selectedStatus","setSelectedStatus","useEffect","setItem","stringify","context","Provider","from","to","produce","draft","taskMoved","splice","console","log","foundIndex","findIndex","src_components_TypeSelect","length","filter","onChange","e","placeholder","push","Pomodoro","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyUp","event","tagName","pauseTimer","resetTimer","setState","selectedType","running","tick","state","stopInterval","play","navigator","serviceWorker","register","then","sw","showNotification","clearInterval","interval","startTimer","setInterval","currentTime","getStatus","_this$state","getProgress","total","handleToggleSound","handleToggleTask","addEventListener","Notification","requestPermission","Audio","preload","removeEventListener","_this$state2","src_components_TimeDisplay","src_components_Controls","Tasks_TaskToggle","src_components_Shortcuts","src_components_ToggleSound","Tasks_TaskList","Component","defaultProps","ReactDOM","render","dist_esm","backend","HTML5Backend","src_containers_Pomodoro","getElementById"],"mappings":"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","file":"static/js/main.4f20a0cd.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport \"./TypeSelect.css\";\n\nconst TypeSelect = ({ types, changeType, selected }) => (\n  <div className=\"TypeSelect\">\n    {types.map((type, index) => (\n      <button\n        key={type.name}\n        onClick={() => changeType(type)}\n        className={type.name === selected.name ? \"active\" : \"\"}\n      >\n        {type.name}\n      </button>\n    ))}\n  </div>\n);\n\nexport default memo(TypeSelect);\n","function pad2(num) {\n  return num > 9 ? num : `0${num}`;\n}\n\nexport function formatTime(time) {\n  const minutes = pad2(Math.floor(time / 60));\n  const seconds = pad2(Math.floor(time % 60));\n\n  return `${minutes}:${seconds}`;\n}\n","import React from 'react';\nimport { formatTime } from '../helpers';\nimport './TimeDisplay.css';\n\nconst TimeDisplay = ({ time, status, progress }) => {\n  document.title = `(${formatTime(time)}) Pomodoro`;\n\n  const radius = 150;\n  const stroke = 5;\n  const normalizedRadius = radius - stroke * 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div className=\"TimeDisplay\">\n      <svg width=\"100%\" viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\n        <circle\n          stroke=\"#ddd\"\n          fill=\"#fff\"\n          strokeWidth={stroke}\n          r={normalizedRadius}\n          cx={radius}\n          cy={radius}\n        />\n        <circle\n          stroke=\"#D9534F\"\n          fill=\"transparent\"\n          strokeWidth={stroke}\n          strokeDasharray={circumference + ' ' + circumference}\n          style={{ strokeDashoffset }}\n          r={normalizedRadius}\n          cx={radius}\n          cy={radius}\n        />\n      </svg>\n      <div>\n        <h1>{formatTime(time)}</h1>\n        <p>{status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeDisplay;\n","import React, { memo } from 'react';\nimport './Controls.css';\n\nconst Controls = ({ start, reset, pause, status }) => (\n  <div className=\"Controls\">\n    {!status && (\n      <button onClick={start} className=\"start\">\n        Start Timer\n      </button>\n    )}\n\n    {status === 'Finished' && (\n      <button onClick={start} className=\"start\">\n        Restart Timer\n      </button>\n    )}\n\n    {(status === 'Paused' || status === 'Running') && (\n      <div>\n        <button onClick={reset} className=\"reset\">\n          Reset\n        </button>\n        <button onClick={pause} className={status === 'Paused' ? 'resume' : 'pause'}>\n          {status === 'Paused' ? 'Resume' : 'Pause'}\n        </button>\n      </div>\n    )}\n  </div>\n);\n\nexport default memo(Controls);\n","import React, { memo } from 'react';\nimport './Shortcuts.css';\n\nconst Shortcuts = () => (\n  <div className=\"Shortcuts\">\n    <i className=\"far fa-keyboard\" />\n    <div className=\"Shortcuts-box\">\n      <div className=\"Shortcut\">\n        <div>Play / Pause / Resume</div>\n        <div>\n          <kbd>Space</kbd>\n        </div>\n      </div>\n      <div className=\"Shortcut\">\n        <div>Reset</div>\n        <div>\n          <kbd>Esc</kbd>\n        </div>\n      </div>\n      <div className=\"Shortcut\">\n        <div>Pomodoro</div>\n        <div>\n          <kbd>1</kbd>\n          <kbd>Num1</kbd>\n        </div>\n      </div>\n      <div className=\"Shortcut\">\n        <div>Short Break</div>\n        <div>\n          <kbd>2</kbd>\n          <kbd>Num2</kbd>\n        </div>\n      </div>\n      <div className=\"Shortcut\">\n        <div>Long Break</div>\n        <div>\n          <kbd>3</kbd>\n          <kbd>Num3</kbd>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(Shortcuts);\n","import React, { memo } from 'react';\nimport './ToggleSound.css';\n\nconst ToggleSound = ({ sound, toggleSound }) => (\n  <button\n    className={`ToggleSound ${sound && 'active'}`}\n    onClick={toggleSound}\n    title={sound ? 'Disable Sound' : 'Enable Sound'}\n  >\n    <i className={`fa fa-volume-${sound ? 'up' : 'mute'}`} />\n  </button>\n);\n\nexport default memo(ToggleSound);\n","import React, { memo } from \"react\";\nimport \"./styles.css\";\n\nconst TaskToggle = ({ task, toggleTask }) => (\n  <button\n    className={`ToggleTask ${task && \"active\"}`}\n    onClick={toggleTask}\n    title={task ? \"Disable Task\" : \"Enable Task\"}\n  >\n    <i className={\"fa fa-tasks\"} />\n  </button>\n);\n\nexport default memo(TaskToggle);\n","import { createContext } from \"react\";\n\nexport default createContext({});\n","import React, { useRef, useContext } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport \"./styles.css\";\n\nimport TaskContext from \"../TaskList/context\";\n\nexport default function Task({ task, index }) {\n  const ref = useRef();\n  const { move, handleStatus } = useContext(TaskContext);\n  const [{ isDragging }, dragRef] = useDrag({\n    item: { type: \"TASK\", id: task.id, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const [, dropRef] = useDrop({\n    accept: \"TASK\",\n    hover(item, monitor) {\n      if (item.id === task.id) return;\n      const dragged = item;\n      const target = task;\n      const targetSize = ref.current.getBoundingClientRect();\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\n      const draggedOffset = monitor.getClientOffset();\n      const draggedTop = draggedOffset.y - targetSize.top;\n\n      if (dragged.order < target.order && draggedTop < targetCenter) return;\n      if (dragged.order > target.order && draggedTop > targetCenter) return;\n\n      move(item.index, index);\n      item.index = index;\n    }\n  });\n\n  dragRef(dropRef(ref));\n\n  return (\n    <div ref={ref} className={isDragging ? \"Task Dragging\" : \"Task\"}>\n      <div>{task.title}</div>\n      <span onClick={() => handleStatus(task)}>\n        {task.closed ? \"Open\" : \"Close\"}\n      </span>\n    </div>\n  );\n}\n","import React, { memo, useState, useEffect } from \"react\";\nimport produce from \"immer\";\nimport TaskContext from \"./context\";\nimport Task from \"../Task\";\nimport TypeSelect from \"../../TypeSelect\";\n\nimport \"./styles.css\";\n\nconst TaskList = ({ selectedTaskType }) => {\n  const [input, setInput] = useState(\"\");\n  const taskStatus = [\n    { name: \"All\", value: -1 },\n    { name: \"Open\", value: false },\n    { name: \"Closed\", value: true }\n  ];\n\n  const [tasks, setTasks] = useState(\n    JSON.parse(window.localStorage.getItem(\"pomodoro-react-tasks\")) || []\n  );\n  const [selectedStatus, setSelectedStatus] = useState(taskStatus[0]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"pomodoro-react-tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  function move(from, to) {\n    setTasks(\n      produce(tasks, draft => {\n        const taskMoved = draft[from];\n        draft.splice(from, 1);\n        draft.splice(to, 0, taskMoved);\n      })\n    );\n  }\n\n  function handleStatus(task) {\n    console.log(\"task:\", task);\n    setTasks(\n      produce(tasks, draft => {\n        const foundIndex = draft.findIndex(item => item.id === task.id);\n        draft[foundIndex].closed = !draft[foundIndex].closed;\n      })\n    );\n  }\n\n  function addTask() {\n    setTasks(\n      produce(tasks, draft => {\n        draft.push({ id: draft.length + 1, title: input, closed: false });\n      })\n    );\n    setInput(\"\");\n  }\n\n  return (\n    <TaskContext.Provider value={{ tasks, move, handleStatus }}>\n      <TypeSelect\n        types={taskStatus}\n        selected={selectedStatus}\n        changeType={setSelectedStatus}\n      />\n      <div className=\"Tasks\">\n        <div className=\"Tasks-box\">\n          {tasks.length > 0 ? (\n            tasks\n              .filter(\n                task =>\n                  task.closed === selectedStatus.value ||\n                  selectedStatus.value === -1\n              )\n              .map((task, index) => (\n                <Task key={task.id} index={index} task={task} />\n              ))\n          ) : (\n            <div className=\"Task\">No Tasks</div>\n          )}\n        </div>\n      </div>\n      <div className=\"Task\">\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"New Task\"\n        />\n        <span onClick={addTask}>{\"Add\"}</span>\n      </div>\n    </TaskContext.Provider>\n  );\n};\n\nexport default memo(TaskList);\n","import React, { Component } from \"react\";\nimport TypeSelect from \"../components/TypeSelect\";\nimport TimeDisplay from \"../components/TimeDisplay\";\nimport Controls from \"../components/Controls\";\nimport Shortcuts from \"../components/Shortcuts\";\nimport ToggleSound from \"../components/ToggleSound\";\nimport ToggleTask from \"../components/Tasks/TaskToggle\";\nimport TaskList from \"../components/Tasks/TaskList\";\nimport \"./Pomodoro.css\";\n\nclass Pomodoro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedType: props.types[0],\n      time: props.types[0].time,\n      interval: null,\n      running: false,\n      sound:\n        JSON.parse(window.localStorage.getItem(\"pomodoro-react-sound\")) || true,\n      taskStatus:\n        JSON.parse(window.localStorage.getItem(\"pomodoro-react-taskStatus\")) ||\n        null\n    };\n  }\n\n  static defaultProps = {\n    types: [\n      { name: \"Pomodoro\", time: 1500 },\n      { name: \"Short Break\", time: 300 },\n      { name: \"Long Break\", time: 900 }\n    ]\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n    Notification.requestPermission();\n    this.sound = new Audio(\"bell.flac\");\n    this.sound.preload = \"auto\";\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  handleKeyUp = event => {\n    if (event.target.tagName === \"INPUT\") return;\n    if (event.key === \" \") {\n      this.pauseTimer();\n    } else if (event.key === \"Escape\") {\n      this.resetTimer();\n    } else if (event.key >= 1 && event.key <= this.props.types.length) {\n      this.changeType(this.props.types[event.key - 1]);\n    }\n  };\n\n  changeType = type => {\n    this.resetTimer();\n    this.setState({ selectedType: type, time: type.time, running: false });\n  };\n\n  tick = () => {\n    if (this.state.time <= 1) {\n      this.stopInterval();\n      this.setState({ running: false });\n      if (this.state.sound) this.sound.play();\n      try {\n        navigator.serviceWorker.register(\"service-worker.js\").then(sw => {\n          sw.showNotification(`${this.state.selectedType.name} finished!`);\n        });\n      } catch (e) {\n        console.log(\"Notification error\", e);\n      }\n    }\n    this.setState(state => ({ time: state.time - 1 }));\n  };\n\n  stopInterval = () => {\n    clearInterval(this.state.interval);\n    this.setState({ interval: null });\n  };\n\n  startTimer = () => {\n    this.setState(state => ({\n      running: true,\n      interval: setInterval(this.tick, 1000),\n      time: state.time > 0 ? state.time : state.selectedType.time\n    }));\n    this.sound.pause();\n    this.sound.currentTime = 0;\n  };\n\n  resetTimer = () => {\n    this.stopInterval();\n    this.setState(state => ({\n      time: state.selectedType.time,\n      running: false\n    }));\n  };\n\n  pauseTimer = () => {\n    this.state.interval ? this.stopInterval() : this.startTimer();\n  };\n\n  getStatus = () => {\n    const { time, running, interval } = this.state;\n    if (time === 0) return \"Finished\";\n    if (running && !interval) return \"Paused\";\n    if (running) return \"Running\";\n  };\n\n  getProgress = () => {\n    const current = this.state.time;\n    const total = this.state.selectedType.time;\n    return ((total - current) / total) * 100;\n  };\n\n  handleToggleSound = () => {\n    this.setState(\n      state => ({\n        sound: !state.sound\n      }),\n      () => {\n        window.localStorage.setItem(\"pomodoro-react-sound\", this.state.sound);\n      }\n    );\n  };\n\n  handleToggleTask = () => {\n    this.setState(\n      state => ({\n        taskStatus: !state.taskStatus\n      }),\n      () => {\n        window.localStorage.setItem(\n          \"pomodoro-react-taskStatus\",\n          this.state.taskStatus\n        );\n      }\n    );\n  };\n\n  render() {\n    const { time, selectedType, sound, taskStatus } = this.state;\n    const { types } = this.props;\n\n    return (\n      <div className=\"Content\">\n        <div className=\"Pomodoro\">\n          <TypeSelect\n            types={types}\n            selected={selectedType}\n            changeType={this.changeType}\n          />\n          <TimeDisplay\n            time={time}\n            status={this.getStatus()}\n            progress={this.getProgress()}\n          />\n          <Controls\n            start={this.startTimer}\n            reset={this.resetTimer}\n            pause={this.pauseTimer}\n            status={this.getStatus()}\n          />\n          <ToggleTask task={taskStatus} toggleTask={this.handleToggleTask} />\n          <Shortcuts />\n          <ToggleSound sound={sound} toggleSound={this.handleToggleSound} />\n        </div>\n        {taskStatus && (\n          <div className=\"TaskPainel\">\n            <TaskList />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Pomodoro;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport Pomodoro from \"./containers/Pomodoro\";\n\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <Pomodoro />\n  </DndProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}